kotlin version: 2.1.10
error message: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.base/java.util.Arrays.copyOf(Arrays.java:3482)
	at org.jetbrains.kotlin.kotlinx.collections.immutable.implementations.immutableList.SmallPersistentVector.add(SmallPersistentVector.kt:30)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.appendInstr(WasmIrToBinary.kt:770)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.appendExpr(WasmIrToBinary.kt:484)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.appendCode$lambda$57(WasmIrToBinary.kt:573)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary$$Lambda/0x000000012800acb0.invoke(Unknown Source)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.withVarUInt32PayloadSizePrepended(WasmIrToBinary.kt:338)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.appendCode(WasmIrToBinary.kt:564)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.appendWasmModule$lambda$28$lambda$24(WasmIrToBinary.kt:177)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary$$Lambda/0x000000012800aa58.invoke(Unknown Source)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.appendSection_Sr9dMcE$lambda$45(WasmIrToBinary.kt:327)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary$$Lambda/0x00000001280a0b90.invoke(Unknown Source)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.withVarUInt32PayloadSizePrepended(WasmIrToBinary.kt:338)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.appendSection-Sr9dMcE(WasmIrToBinary.kt:327)
	at org.jetbrains.kotlin.wasm.ir.convertors.WasmIrToBinary.appendWasmModule(WasmIrToBinary.kt:175)
	at org.jetbrains.kotlin.backend.wasm.WasmCompilerKt.compileWasm-quGr1d0(wasmCompiler.kt:191)
	at org.jetbrains.kotlin.cli.js.K2JSCompiler.doExecute(K2JSCompiler.kt:490)
	at org.jetbrains.kotlin.cli.js.K2JSCompiler.doExecute(K2JSCompiler.kt:105)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1706)
	at java.base/java.lang.invoke.LambdaForm$DMH/0x00000001280b1c00.invokeInterface(LambdaForm$DMH)
	at java.base/java.lang.invoke.LambdaForm$MH/0x00000001280b6000.invoke(LambdaForm$MH)
	at java.base/java.lang.invoke.Invokers$Holder.invokeExact_MT(Invokers$Holder)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(DirectMethodHandleAccessor.java:157)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.executePrivileged(AccessController.java:809)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)


