/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'

description = 'Hadoop Authentication Module'

dependencies {
  // Spotbugs Annotations are only needed for old findbugs
  // annotation usage like in Zookeeper during compilation time.
  // It is not included in the release so exclude from checks.
  testCompileOnly libs.spotbugs.annotations
  permitUnusedDeclared libs.spotbugs.annotations
  // Exclude these from jar validation and license checks.
  configurations.jarValidation {
    exclude group: "com.github.spotbugs", module: "spotbugs-annotations"
  }

  implementation project(':solr:core')
  implementation project(':solr:solrj')
  implementation project(':solr:solrj-zookeeper')

  implementation libs.slf4j.api

  api libs.eclipse.jetty.toolchain.servletapi

  implementation libs.fasterxml.jackson.core.core
  implementation libs.google.guava
  implementation libs.dropwizard.metrics.core
  implementation libs.apache.httpcomponents.httpclient
  implementation libs.apache.httpcomponents.httpcore

  implementation libs.eclipse.jetty.client

  // ZooKeeper & Curator
  implementation(libs.apache.zookeeper.zookeeper, {
    exclude group: "org.apache.yetus", module: "audience-annotations"
  })
  // required for instantiating a Zookeeper server (for embedding ZK or running tests)
  runtimeOnly libs.xerial.snappy.java

    implementation(libs.apache.curator.framework, {
    exclude group: 'org.apache.zookeeper', module: 'zookeeper'
  })
  runtimeOnly(libs.apache.curator.recipes, {
    exclude group: 'org.apache.zookeeper', module: 'zookeeper'
  })

  // Hadoop auth framework
  implementation libs.apache.hadoop.annotations
  permitUnusedDeclared libs.apache.hadoop.annotations
  implementation(libs.apache.hadoop.auth) { transitive = false }
  implementation(libs.apache.hadoop.common) { transitive = false }
  // transitive of hadoop-common; used by Kerberos auth
  runtimeOnly libs.apache.hadoop.thirdparty.shadedguava
  runtimeOnly libs.commonscollections.commonscollections
  runtimeOnly libs.google.re2j
  runtimeOnly libs.apache.commons.configuration2
  runtimeOnly libs.apache.kerby.core
  runtimeOnly libs.apache.kerby.util

  testImplementation project(':solr:test-framework')
  testImplementation libs.apache.lucene.testframework
  testImplementation libs.carrotsearch.randomizedtesting.runner
  testImplementation libs.junit.junit
  testImplementation libs.hamcrest.hamcrest

  testImplementation(libs.mockito.core, {
    exclude group: "net.bytebuddy", module: "byte-buddy-agent"
  })
  testRuntimeOnly(libs.mockito.subclass, {
    exclude group: "net.bytebuddy", module: "byte-buddy-agent"
  })

  testImplementation libs.commonsio.commonsio

  testImplementation libs.apache.lucene.core

  testImplementation project(':solr:solrj')

  // classes like solr.ICUCollationField, used by TestSolrCloudWithSecureImpersonation for example.
  testRuntimeOnly project(':solr:modules:analysis-extras')

  // Hadoop MiniKdc Dependencies (for Kerberos auth tests)
  testImplementation(libs.apache.hadoop.minikdc, {
    exclude group:'org.apache.kerby', module:'kerby-xdr'
    exclude group:'org.apache.kerby', module:'token-provider'
    exclude group:'org.slf4j', module:'slf4j-reload4j'
    exclude group:'org.jline', module:'jline'
    exclude group:'com.jcraft', module:'jsch'
  })

  // Zookeeper dependency - some tests like HdfsCloudBackupRestore need this
  testImplementation(libs.apache.curator.client, {
    exclude group: 'org.apache.zookeeper', module: 'zookeeper'
  })
  testImplementation(libs.apache.zookeeper.zookeeper, {
    exclude group: "org.apache.yetus", module: "audience-annotations"
  })
  testImplementation(libs.apache.zookeeper.jute) {
    exclude group: 'org.apache.yetus', module: 'audience-annotations'
  }
  // required for instantiating a Zookeeper server in tests or embedded
  testRuntimeOnly(libs.xerial.snappy.java)
}


// Copy all the test resource files from core to the build/resources/test directory
// of the Hadoop Authentication module so we can avoid duplication of the test
// resource files like schemas and SolrConfigs. This can be improved later by making
// the test classes load the resources from core directories directly.
tasks.register('copySolrCoreTestResources', Copy) {
  from(project(':solr:core').sourceSets.test.resources.srcDirs) {
    exclude '**/*.java'
  }
  into sourceSets.test.output.resourcesDir
}

tasks.named('processTestResources').configure {
  dependsOn copySolrCoreTestResources
}
