/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'

description = 'HDFS Contrib Module'

dependencies {
  implementation project(':solr:core')
  implementation project(':solr:solrj')

  implementation 'org.apache.lucene:lucene-core'

  implementation 'org.slf4j:slf4j-api'

  // Hadoop dependencies
  permitUnusedDeclared 'org.apache.hadoop:hadoop-annotations'
  implementation ('org.apache.hadoop:hadoop-annotations') { transitive = false }
  permitUnusedDeclared 'org.apache.hadoop:hadoop-auth'
  implementation ('org.apache.hadoop:hadoop-auth') { transitive = false }
  implementation ('org.apache.hadoop:hadoop-common') { transitive = false }
  // transitive of hadoop-common; used by HDFS
  runtimeOnly 'commons-collections:commons-collections'
  runtimeOnly 'com.google.re2j:re2j'
  runtimeOnly 'org.apache.commons:commons-configuration2'
  runtimeOnly 'org.apache.htrace:htrace-core4' // note: removed in Hadoop 3.3.2
  runtimeOnly 'org.apache.kerby:kerb-core'
  runtimeOnly 'org.apache.kerby:kerb-util'
  implementation ('org.apache.hadoop:hadoop-hdfs-client') { transitive = false }

  // Guava implements the VisibleForTesting annotations
  implementation 'com.google.guava:guava'

  // Caffeine cache to implement HDFS block caching  
  implementation 'com.github.ben-manes.caffeine:caffeine'

  implementation 'commons-cli:commons-cli'

  testImplementation project(':solr:test-framework')
  testImplementation 'org.apache.lucene:lucene-test-framework'
  testImplementation 'com.carrotsearch.randomizedtesting:randomizedtesting-runner'
  testImplementation 'junit:junit'

  // hadoop dependencies for tests
  testImplementation ('org.apache.hadoop:hadoop-hdfs') { transitive = false }
  testImplementation ('org.apache.hadoop:hadoop-common::tests') { transitive = false }
  testImplementation ('org.apache.hadoop:hadoop-hdfs::tests') { transitive = false }
  testImplementation ('org.apache.hadoop:hadoop-minikdc') { transitive = false }

  testImplementation 'org.slf4j:jcl-over-slf4j'
  testImplementation 'org.apache.logging.log4j:log4j-1.2-api'

  // classes like solr.ICUCollationField, used by NNFailoverTest for example.
  testRuntimeOnly project(':solr:modules:analysis-extras')

  // required for instantiating a Zookeeper server in tests or embedded
  runtimeOnly ('org.xerial.snappy:snappy-java')

  // used by the hadoop-specific test framework classes
  testImplementation('commons-io:commons-io') { transitive = false }
  testImplementation ('org.apache.commons:commons-compress') { transitive = false }
  testImplementation ('org.apache.commons:commons-collections4') { transitive = false }
  testImplementation ('org.apache.commons:commons-lang3') { transitive = false }
  testImplementation ('com.sun.jersey:jersey-servlet') { transitive = false }
  testImplementation 'io.dropwizard.metrics:metrics-core'
  testImplementation 'javax.servlet:javax.servlet-api'
  testImplementation 'org.eclipse.jetty:jetty-http'
  testImplementation 'org.eclipse.jetty:jetty-server'
  testImplementation 'org.eclipse.jetty:jetty-servlet'
  testImplementation 'org.eclipse.jetty:jetty-util'
  testImplementation 'org.eclipse.jetty:jetty-webapp'

  // Zookeeper dependency - some tests like HdfsCloudBackupRestore need this
  testImplementation 'org.apache.zookeeper:zookeeper'
}


// Copy all the test resource files from core to the build/resources/test directory
// of the HDFS module so we can avoid duplication of the test resource files like
// schemas and SolrConfigs. This can be improved later by making the test classes
// load the resources from core directories directly.
task copySolrCoreTestResources(type: Copy) {
  from(project(':solr:core').sourceSets.test.resources.srcDirs) {
    exclude '**/*.java'
  }
  into sourceSets.test.output.resourcesDir
}

tasks.processTestResources.configure {
  dependsOn copySolrCoreTestResources
}
