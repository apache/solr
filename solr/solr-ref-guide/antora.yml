name: solr
# The version could be parsed from the branch name:
# 'branch_(*)_(*)': $1.$2' (or $1_$2)
# But this doesn't really work on Jenkins since it calls all checkouts HEAD
# So declaring the version explicitly here
version: '9_0'
# Marking a version as 'prerelease: true' is only needed for unpublished branches
#prerelease: true
display_version: '9.0'
title: Solr Reference Guide
nav:
- modules/getting-started/getting-started-nav.adoc
- modules/deployment-guide/deployment-nav.adoc
- modules/configuration-guide/config-nav.adoc
- modules/indexing-guide/indexing-nav.adoc
- modules/query-guide/querying-nav.adoc
- modules/upgrade-notes/upgrade-nav.adoc
asciidoc:
  attributes:
    idseparator: '-'
    idprefix: ''
    # 'patch_version' is the 'z' part of x.y.z semantic version
    patch_version: '0'
    solr-javadocs: https://solr.apache.org/docs/{page-component-version}_{patch_version}
    # TODO the following works for now but might not be right if
    # we don't have version-to-version match between Lucene and Solr
    lucene-javadocs: https://lucene.apache.org/core/{page-component-version}_{patch_version}
    java-javadocs: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/
    # TODO the following are hardcoded for now
    # Some constructed  links may be 404 TODO to check
    solr-docs-version: '9.0'
    solr-full-version: '9.0.0'
    ivy-tika-version: '1.27'
    ivy-opennlp-version: '1.9.1'
    ivy-commons-codec-version: '1.13'
    ivy-zookeeper-version: '3.7.0'
    ivy-log4j-version: '2.17.1'
    ivy-hadoop-version: '3.2.0'
    ivy-dropwizard-version: '4.1.5'
