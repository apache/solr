title: 'Solr 1.4 Replication - Repeater throwing NullPointerException (noble) ==================
  Release 1.4.0 ================== Release Date: See http://lucene.apache.org/solr
  for the official release date. Upgrading from Solr 1.3 ----------------------- There
  is a new default faceting algorithm for multiVaued fields that should be faster
  for most cases. One can revert to the previous algorithm (which has also been improved
  somewhat) by adding facet.method=enum to the request. Searching and sorting is now
  done on a per-segment basis, meaning that the FieldCache entries used for sorting
  and for function queries are created and used per-segment and can be reused for
  segments that don''t change between index updates. While generally beneficial, this
  can lead to increased memory usage over 1.3 in certain scenarios: 1) A single valued
  field that was used for both sorting and faceting in 1.3 would have used the same
  top level FieldCache entry. In 1.4, sorting will use entries at the segment level
  while faceting will still use entries at the top reader level, leading to increased
  memory usage. 2) Certain function queries such as ord() and rord() require a top
  level FieldCache instance and can thus lead to increased memory usage. Consider
  replacing ord() and rord() with alternatives, such as function queries based on
  ms() for date boosting. If you use custom Tokenizer or TokenFilter components in
  a chain specified in schema.xml, they must support reusability. If your Tokenizer
  or TokenFilter maintains state, it should implement reset(). If your TokenFilteFactory
  does not return a subclass of TokenFilter, then it should implement reset() and
  call reset() on its input TokenStream. TokenizerFactory implementations must now
  return a Tokenizer rather than a TokenStream. New users of Solr 1.4 will have omitTermFreqAndPositions
  enabled for non-text indexed fields by default, which avoids indexing term frequency,
  positions, and payloads, making the index smaller and faster. If you are upgrading
  from an earlier Solr release and want to enable omitTermFreqAndPositions by default,
  change the schema version from 1.1 to 1.2 in schema.xml. Remove any existing index
  and restart Solr to ensure that omitTermFreqAndPositions completely takes affect.
  The default QParserPlugin used by the QueryComponent for parsing the "q" param has
  been changed, to remove support for the deprecated use of ";" as a separator between
  the query string and the sort options when no "sort" param was used. Users who wish
  to continue using the semi-colon based method of specifying the sort options should
  explicitly set the defType param to "lucenePlusSort" on all requests.'
type: fixed
authors:
- name: 'The simplest way to do this is by specifying it as a default param

    for your request handlers in solrconfig.xml'
- name: 'see the example solrconfig.xml for

    sample syntax.'
links:
- name: SOLR-1769
  url: https://issues.apache.org/jira/browse/SOLR-1769
